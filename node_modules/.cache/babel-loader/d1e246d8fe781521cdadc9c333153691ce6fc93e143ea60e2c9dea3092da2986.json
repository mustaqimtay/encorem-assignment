{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Form, Field, ErrorMessage } from \"vee-validate\";\nimport * as yup from \"yup\";\nexport default {\n  name: \"Login\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n  data() {\n    const schema = yup.object().shape({\n      username: yup.string().required(\"Username is required!\"),\n      password: yup.string().required(\"Password is required!\")\n    });\n    return {\n      loading: false,\n      message: \"\",\n      schema\n    };\n  },\n  computed: {\n    loggedIn() {\n      return this.$store.state.auth.status.loggedIn;\n    }\n  },\n  created() {\n    if (this.loggedIn) {\n      this.$router.push(\"/appointment\");\n    }\n  },\n  methods: {\n    handleLogin(user) {\n      this.loading = true;\n      this.$store.dispatch(\"auth/login\", user).then(() => {\n        this.$router.push(\"/appointment\");\n      }, error => {\n        this.loading = false;\n        this.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    }\n  }\n};","map":{"version":3,"names":["Form","Field","ErrorMessage","yup","name","components","data","schema","object","shape","username","string","required","password","loading","message","computed","loggedIn","$store","state","auth","status","created","$router","push","methods","handleLogin","user","dispatch","then","error","response","toString"],"sources":["/Volumes/ExternalSSD/Docker/www/develop/encore-med/src/components/Login.vue"],"sourcesContent":["<template>\n    <div class=\"col-md-12\">\n      \n      <div class=\"card card-container\">\n        <center><img src=\"https://s3-ap-southeast-1.amazonaws.com/encorehealthcare/website/image/logo.png\" style=\"width: 300px;padding-top:20px\" alt=\"logo\"></center>\n        <Form @submit=\"handleLogin\" :validation-schema=\"schema\">\n          <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <Field name=\"username\" type=\"text\" class=\"form-control\" />\n            <ErrorMessage name=\"username\" class=\"error-feedback\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <Field name=\"password\" type=\"password\" class=\"form-control\" />\n            <ErrorMessage name=\"password\" class=\"error-feedback\" />\n          </div>\n  \n          <div class=\"form-group\">\n            <button class=\"btn btn-primary btn-block\" :disabled=\"loading\">\n              <span v-show=\"loading\" class=\"spinner-border spinner-border-sm\"></span>\n              <span>Login</span>\n            </button>\n          </div>\n  \n          <div class=\"form-group\">\n            <div v-if=\"message\" class=\"alert alert-danger\" role=\"alert\">\n              {{ message }}\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  </template>\n\n  <script>\n  import { Form, Field, ErrorMessage } from \"vee-validate\";\n  import * as yup from \"yup\";\n  \n  export default {\n    name: \"Login\",\n    components: {\n      Form,\n      Field,\n      ErrorMessage,\n    },\n    data() {\n      const schema = yup.object().shape({\n        username: yup.string().required(\"Username is required!\"),\n        password: yup.string().required(\"Password is required!\"),\n      });\n  \n      return {\n        loading: false,\n        message: \"\",\n        schema,\n      };\n    },\n    computed: {\n      loggedIn() {\n        return this.$store.state.auth.status.loggedIn;\n      },\n    },\n    created() {\n      if (this.loggedIn) {\n        this.$router.push(\"/appointment\");\n      }\n    },\n    methods: {\n      handleLogin(user) {\n        this.loading = true;\n        \n        this.$store.dispatch(\"auth/login\", user).then(\n          () => {\n            this.$router.push(\"/appointment\");\n          },\n          (error) => {\n          \n            this.loading = false;\n            this.message =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n          }\n        );\n\n       \n      },\n    },\n  };\n  </script>"],"mappings":";AAmCE,SAASA,IAAI,EAAEC,KAAK,EAAEC,YAAW,QAAS,cAAc;AACxD,OAAO,KAAKC,GAAE,MAAO,KAAK;AAE1B,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE;IACVL,IAAI;IACJC,KAAK;IACLC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,MAAMC,MAAK,GAAIJ,GAAG,CAACK,MAAM,EAAE,CAACC,KAAK,CAAC;MAChCC,QAAQ,EAAEP,GAAG,CAACQ,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB,CAAC;MACxDC,QAAQ,EAAEV,GAAG,CAACQ,MAAM,EAAE,CAACC,QAAQ,CAAC,uBAAuB;IACzD,CAAC,CAAC;IAEF,OAAO;MACLE,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,EAAE;MACXR;IACF,CAAC;EACH,CAAC;EACDS,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACJ,QAAQ;IAC/C;EACF,CAAC;EACDK,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACL,QAAQ,EAAE;MACjB,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;IACnC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACC,IAAI,EAAE;MAChB,IAAI,CAACb,OAAM,GAAI,IAAI;MAEnB,IAAI,CAACI,MAAM,CAACU,QAAQ,CAAC,YAAY,EAAED,IAAI,CAAC,CAACE,IAAI,CAC3C,MAAM;QACJ,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;MACnC,CAAC,EACAM,KAAK,IAAK;QAET,IAAI,CAAChB,OAAM,GAAI,KAAK;QACpB,IAAI,CAACC,OAAM,GACRe,KAAK,CAACC,QAAO,IACZD,KAAK,CAACC,QAAQ,CAACzB,IAAG,IAClBwB,KAAK,CAACC,QAAQ,CAACzB,IAAI,CAACS,OAAO,IAC7Be,KAAK,CAACf,OAAM,IACZe,KAAK,CAACE,QAAQ,EAAE;MACpB,EACD;IAGH;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}